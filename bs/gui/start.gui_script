local m_game = require "bs.lua.game"

function init(self)
	self.box = gui.get_node("box")
	self.btn_play = gui.get_node("button-play")
	self.vsl_play = gui.get_node("visual-play")
	self.btn_help = gui.get_node("button-help")
	self.btn_settings = gui.get_node("button-settings")
	gui.set_text(gui.get_node("counter-best"), m_game.best)
	m_game.gui_animate_scale(self.vsl_play, m_game.scl_pong,
	m_game.dtn_pong, gui.PLAYBACK_LOOP_PINGPONG)
	msg.post(".", m_game.fade_in)
	m_game.delay_input_focus(m_game.dtn_create)
end

function on_message(self, message_id, message, sender)
	if message_id == m_game.fade_in then
		gui.set_alpha(self.box, 0)
		m_game.gui_animate_alpha(self.box, 1)
	elseif message_id == m_game.fade_out then
		m_game.gui_animate_alpha(self.box, 0)
	end
end

function on_input(self, action_id, action)
	if action_id == m_game.touch and action.pressed then
		if gui.pick_node(self.btn_play, action.x, action.y) then
			gui.cancel_animation(self.vsl_play, "scale")
			m_game.gui_pressed(self.btn_play, m_game.scl_button)
			timer.delay(m_game.dtn_pressed, false, function()
				m_game.gui_switch("game")
			end)
		elseif gui.pick_node(self.btn_help, action.x, action.y) then
			m_game.gui_pressed(self.btn_help, m_game.scl_button)
			timer.delay(m_game.dtn_pressed, false, function()
				m_game.gui_switch("help")
			end)
		elseif gui.pick_node(self.btn_settings, action.x, action.y) then
			m_game.gui_pressed(self.btn_settings, m_game.scl_button)
			timer.delay(m_game.dtn_pressed, false, function()
				m_game.gui_switch("settings")
			end)
		end
	end
end
